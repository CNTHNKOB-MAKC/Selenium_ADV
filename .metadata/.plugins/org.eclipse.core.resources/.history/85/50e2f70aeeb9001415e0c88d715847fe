package HomeWorkSelenium_ADV_Day_01;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
//Solution 3 // assumes it will be in the correct order/ nothing exciting // does not like the third one
public class AssertElements3ArrayOrderAssumedNotSorted {
	private WebDriver driver;
	private String baseUrl;
	private boolean acceptNextAlert = true;
	private StringBuffer verificationErrors = new StringBuffer();


	@Test
	public void testCheckQuickLaunchButtons() throws Exception {
		String [] expected_footers =  {"Assign Leave", "Leave List", "Timesheets"};
		
		driver.get(baseUrl + "/symfony/web/index.php/auth/login");
		driver.findElement(By.id("txtUsername")).clear();
		driver.findElement(By.id("txtUsername")).sendKeys("admin");
		driver.findElement(By.id("txtPassword")).clear();
		driver.findElement(By.id("txtPassword")).sendKeys("Password");
		driver.findElement(By.id("btnLogin")).click();

		// Solution 3 // assumes it will be in the correct order/ nothing exciting // does not like the third one
		for (int i=0; i<3; i++) {
			String actual_footer = driver.findElement(By.xpath("(//div[@class='quickLaunge']/a/img/following-sibling::*)[" + (i+1) + "]")).getText();
			String expected_footer = expected_footers[i]; //array previously declared 		String [] expected_footers =  {"Assign Leave", "Leave List", "Timesheets"};
			assertTrue(actual_footer.equals(expected_footer));
		}
		
	}

	@After
	public void tearDown() throws Exception {
		

		driver.findElement(By.id("welcome")).click();
		driver.findElement(By.linkText("Logout")).click();
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
	
	}

	@Before
	public void setUp() throws Exception {
		driver = new FirefoxDriver();
		baseUrl = "http://hrm.seleniumminutes.com/";
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	}
	}

